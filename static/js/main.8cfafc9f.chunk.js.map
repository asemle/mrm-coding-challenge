{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","updateFilter","value","setState","state","filter","indexOf","newArr","splice","className","this","onClick","e","target","list","word","some","el","includes","map","element","i","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAoDeA,G,wDAhDb,aAAe,IAAD,8BACZ,gBAOFC,aAAe,SAACC,GACd,GAAa,UAAVA,EACD,EAAKC,SAAS,CACZ,OAAU,UAGT,IAAyC,IAAtC,EAAKC,MAAMC,OAAOC,QAAQJ,GAChC,EAAKC,SAAS,CACZ,OAAS,GAAT,mBAAc,EAAKC,MAAMC,QAAzB,CAAiCH,UAE9B,CACL,IAAIK,EAAM,YAAO,EAAKH,MAAMC,QAC5BE,EAAOC,OAAOD,EAAOD,QAAQJ,GAAQ,GACrC,EAAKC,SAAS,CACZ,OAAUI,MAnBd,EAAKH,MAAQ,CACX,OAAU,GACV,KAAQ,CAAC,QAAS,QAAS,QAAS,MAAO,OAAQ,cAAe,cAAe,OAAQ,OAAQ,UAAW,aAAc,SAAU,MAAO,MAAO,SAAU,UAAW,OAAQ,WAAY,aAAc,UAL/L,E,qDA0BJ,IAAD,OACP,OACE,sBAAKK,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,wBAAQA,UAAWC,KAAKN,MAAMC,OAAOC,QAAQ,MAAQ,EAAI,WAAa,GAAIJ,MAAM,IAAIS,QAAS,SAAAC,GAAC,OAAI,EAAKX,aAAaW,EAAEC,OAAOX,QAA7H,eACA,wBAAQO,UAAWC,KAAKN,MAAMC,OAAOC,QAAQ,MAAQ,EAAI,WAAa,GAAKJ,MAAM,IAAIS,QAAS,SAAAC,GAAC,OAAI,EAAKX,aAAaW,EAAEC,OAAOX,QAA9H,eACA,wBAAQO,UAAWC,KAAKN,MAAMC,OAAOC,QAAQ,MAAQ,EAAI,WAAa,GAAKJ,MAAM,IAAIS,QAAS,SAAAC,GAAC,OAAI,EAAKX,aAAaW,EAAEC,OAAOX,QAA9H,eACA,wBAAQA,MAAM,QAAQS,QAAS,SAAAC,GAAC,OAAI,EAAKX,aAAaW,EAAEC,OAAOX,QAA/D,sBAEF,6BACGQ,KAAKN,MAAMU,KACTT,QAAO,SAAAU,GAAI,OAAK,EAAKX,MAAMC,OAAOW,MAAK,SAAAC,GAAE,OAAIF,EAAKG,SAASD,SAC3DE,KAAI,SAACC,EAASC,GAAV,OACH,6BAAaD,GAAJC,e,GAxCLC,IAAMC,YCSTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8cfafc9f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      'filter': [],\n      'list': [\"Lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\", \"Odio\", \"tempore\", \"Voluptates\", \"quidem\", \"rem\", \"vel\", \"labore\", \"dolores\", \"nemo\", \"possimus\", \"Recusandae\", \"eaque\"]\n    }\n  }\n  updateFilter = (value) => {\n    if(value === \"reset\") {\n      this.setState({\n        'filter': []\n      })\n    }\n    else if(this.state.filter.indexOf(value) === -1) {\n      this.setState({\n        'filter': [...this.state.filter, value]\n      })\n    } else {\n      var newArr = [...this.state.filter];\n      newArr.splice(newArr.indexOf(value), 1);\n      this.setState({\n        'filter': newArr\n      })\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"buttonBox\">\n          <button className={this.state.filter.indexOf(\"a\") > -1 ? 'selected' : ''} value=\"a\" onClick={e => this.updateFilter(e.target.value)}>a</button>\n          <button className={this.state.filter.indexOf(\"e\") > -1 ? 'selected' : ''}  value=\"e\" onClick={e => this.updateFilter(e.target.value)}>e</button>\n          <button className={this.state.filter.indexOf(\"i\") > -1 ? 'selected' : ''}  value=\"i\" onClick={e => this.updateFilter(e.target.value)}>i</button>\n          <button value=\"reset\" onClick={e => this.updateFilter(e.target.value)}>reset</button>\n        </div>\n        <ol>\n          {this.state.list\n            .filter(word => !this.state.filter.some(el => word.includes(el)))\n            .map((element, i) =>\n              <li key={i}>{element}</li>\n            )\n          }\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}